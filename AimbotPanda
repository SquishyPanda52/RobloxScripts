--// Services
local Players            = game:GetService("Players")
local RunService         = game:GetService("RunService")
local UserInputService   = game:GetService("UserInputService")
local ContextAction      = game:GetService("ContextActionService")

--// Locals
local localPlayer        = Players.LocalPlayer
local camera             = workspace.CurrentCamera

-- Aimbot state
local aimbotEnabled      = false
local targetPlayer       = nil
local targetQuery        = ""
local isMinimized        = false
local origMouseBehavior  = UserInputService.MouseBehavior
local origMouseIcon      = UserInputService.MouseIconEnabled

-- ESP state
local espEnabled         = false
local espRegistry        = {}  -- [Player] = { highlight=Highlight, tag=BillboardGui, conns={RBXScriptConnection,...} }

--// UI root
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AdminAimbotGUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = localPlayer:WaitForChild("PlayerGui")

-- Main frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.fromOffset(360, 150)
mainFrame.Position = UDim2.new(0.35, 0, 0.35, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(28, 28, 32)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 26)
titleBar.BackgroundColor3 = Color3.fromRGB(18, 18, 22)
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.BackgroundTransparency = 1
titleLabel.Size = UDim2.new(1, -70, 1, 0)
titleLabel.Position = UDim2.new(0, 8, 0, 0)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 14
titleLabel.TextColor3 = Color3.fromRGB(220, 220, 230)
titleLabel.Text = "Admin Aimbot + ESP"
titleLabel.Parent = titleBar

-- Drag
do
    local dragging, dragInput, dragStart, startPos
    local function update(input)
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- Minimize
local btnMinimize = Instance.new("TextButton")
btnMinimize.Name = "BtnMinimize"
btnMinimize.Text = "-"
btnMinimize.Font = Enum.Font.GothamBold
btnMinimize.TextSize = 18
btnMinimize.Size = UDim2.fromOffset(26, 26)
btnMinimize.Position = UDim2.new(1, -52, 0, 0)
btnMinimize.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
btnMinimize.TextColor3 = Color3.fromRGB(235, 235, 240)
btnMinimize.AutoButtonColor = true
btnMinimize.Parent = titleBar

btnMinimize.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    mainFrame.Size = isMinimized and UDim2.fromOffset(360, 26) or UDim2.fromOffset(360, 150)
end)

-- Close
local btnClose = Instance.new("TextButton")
btnClose.Name = "BtnClose"
btnClose.Text = "X"
btnClose.Font = Enum.Font.GothamBold
btnClose.TextSize = 18
btnClose.Size = UDim2.fromOffset(26, 26)
btnClose.Position = UDim2.new(1, -26, 0, 0)
btnClose.BackgroundColor3 = Color3.fromRGB(60, 30, 30)
btnClose.TextColor3 = Color3.fromRGB(255, 240, 240)
btnClose.AutoButtonColor = true
btnClose.Parent = titleBar

btnClose.MouseButton1Click:Connect(function()
    -- Disable features and clean up
    if aimbotEnabled then
        aimbotEnabled = false
        pcall(function() RunService:UnbindFromRenderStep("AdminAimbot_Bind") end)
        UserInputService.MouseBehavior = origMouseBehavior
        UserInputService.MouseIconEnabled = origMouseIcon
    end
    if espEnabled then
        espEnabled = false
        -- cleanup all esp
        for plr, bundle in pairs(espRegistry) do
            if bundle and bundle.conns then
                for _, c in ipairs(bundle.conns) do pcall(function() c:Disconnect() end) end
            end
            if bundle and bundle.highlight then pcall(function() bundle.highlight:Destroy() end) end
            if bundle and bundle.tag then pcall(function() bundle.tag:Destroy() end) end
            espRegistry[plr] = nil
        end
    end
    ContextAction:UnbindAction("ToggleAimbot")
    screenGui:Destroy()
    pcall(function()
        if script and script.Parent == screenGui then script:Destroy() end
    end)
end)

-- Username box (row 1)
local txtUser = Instance.new("TextBox")
txtUser.Name = "TxtUser"
txtUser.PlaceholderText = "Type partial username..."
txtUser.Font = Enum.Font.Gotham
txtUser.TextSize = 14
txtUser.ClearTextOnFocus = false
txtUser.Size = UDim2.new(1, -120, 0, 34)
txtUser.Position = UDim2.new(0, 8, 0, 36)
txtUser.BackgroundColor3 = Color3.fromRGB(38, 38, 44)
txtUser.TextColor3 = Color3.fromRGB(255, 255, 255)
txtUser.Parent = mainFrame

-- Aimbot toggle (row 1, right)
local btnAimbot = Instance.new("TextButton")
btnAimbot.Name = "BtnAimbot"
btnAimbot.Text = "Aimbot: OFF (E)"
btnAimbot.Font = Enum.Font.GothamBold
btnAimbot.TextSize = 14
btnAimbot.Size = UDim2.new(0, 104, 0, 34)
btnAimbot.Position = UDim2.new(1, -112, 0, 36)
btnAimbot.BackgroundColor3 = Color3.fromRGB(80, 25, 25)
btnAimbot.TextColor3 = Color3.fromRGB(255, 255, 255)
btnAimbot.AutoButtonColor = true
btnAimbot.Parent = mainFrame

-- ESP toggle (row 2)
local btnESP = Instance.new("TextButton")
btnESP.Name = "BtnESP"
btnESP.Text = "ESP: OFF"
btnESP.Font = Enum.Font.GothamBold
btnESP.TextSize = 14
btnESP.Size = UDim2.new(0, 104, 0, 30)
btnESP.Position = UDim2.new(1, -112, 0, 76)
btnESP.BackgroundColor3 = Color3.fromRGB(80, 25, 25)
btnESP.TextColor3 = Color3.fromRGB(255, 255, 255)
btnESP.AutoButtonColor = true
btnESP.Parent = mainFrame

-- Utility: find player by partial
local function findPlayerByPartial(partial)
    partial = (partial or ""):lower()
    if partial == "" then return nil end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Name:lower() == partial then return plr end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Name:lower():sub(1, #partial) == partial then return plr end
    end
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Name:lower():find(partial, 1, true) then return plr end
    end
    return nil
end

local function setUserBoxStatus(ok)
    txtUser.BackgroundColor3 = ok and Color3.fromRGB(24, 60, 32) or Color3.fromRGB(60, 24, 28)
end

local function refreshTarget()
    targetPlayer = findPlayerByPartial(targetQuery)
    setUserBoxStatus(targetPlayer ~= nil)
end

txtUser:GetPropertyChangedSignal("Text"):Connect(function()
    targetQuery = txtUser.Text
    refreshTarget()
end)
txtUser.FocusLost:Connect(function()
    targetQuery = txtUser.Text
    refreshTarget()
end)

Players.PlayerAdded:Connect(function()
    if targetQuery ~= "" then refreshTarget() end
    if espEnabled then
        task.defer(function() -- slight defer for Character
            local plr = Players:GetPlayers()[#Players:GetPlayers()]
            -- handled by global apply pass below
        end)
    end
end)

Players.PlayerRemoving:Connect(function(plr)
    if targetPlayer == plr then refreshTarget() end
    -- ESP cleanup
    local bundle = espRegistry[plr]
    if bundle then
        if bundle.conns then for _, c in ipairs(bundle.conns) do pcall(function() c:Disconnect() end) end
        pcall(function() if bundle.highlight then bundle.highlight:Destroy() end end)
        pcall(function() if bundle.tag then bundle.tag:Destroy() end end)
        espRegistry[plr] = nil
    end
end)

-- Aim target resolver
local function getAimPart(char)
    if not char then return nil end
    return char:FindFirstChild("HumanoidRootPart")
        or char:FindFirstChild("UpperTorso")
        or char:FindFirstChild("Torso")
        or char:FindFirstChild("Head")
end

-- Aimbot bind
local BIND_NAME = "AdminAimbot_Bind"
local function bindAimbot()
    RunService:BindToRenderStep(BIND_NAME, Enum.RenderPriority.Camera.Value + 1, function()
        if not aimbotEnabled then return end

        -- Keep center-lock so camera stays glued
        if UserInputService.MouseBehavior ~= Enum.MouseBehavior.LockCenter then
            UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
        end
        if UserInputService.MouseIconEnabled then
            UserInputService.MouseIconEnabled = false
        end

        if (not targetPlayer) or (not targetPlayer.Character) then
            refreshTarget()
        end
        local part = getAimPart(targetPlayer and targetPlayer.Character)
        if part then
            local camPos = camera.CFrame.Position
            camera.CFrame = CFrame.new(camPos, part.Position)
        end
    end)
end

local function unbindAimbot()
    pcall(function() RunService:UnbindFromRenderStep(BIND_NAME) end)
end

local function setAimbotVisuals(on)
    btnAimbot.Text = on and "Aimbot: ON (E)" or "Aimbot: OFF (E)"
    btnAimbot.BackgroundColor3 = on and Color3.fromRGB(25, 80, 35) or Color3.fromRGB(80, 25, 25)
end

local function enableAimbot()
    if aimbotEnabled then return end
    aimbotEnabled = true
    origMouseBehavior = UserInputService.MouseBehavior
    origMouseIcon = UserInputService.MouseIconEnabled
    setAimbotVisuals(true)
    bindAimbot()
end

local function disableAimbot()
    if not aimbotEnabled then return end
    aimbotEnabled = false
    setAimbotVisuals(false)
    unbindAimbot()
    UserInputService.MouseBehavior = origMouseBehavior
    UserInputService.MouseIconEnabled = origMouseIcon
end

btnAimbot.MouseButton1Click:Connect(function()
    if aimbotEnabled then disableAimbot() else enableAimbot() end
end)

-- E hotkey (ignore while typing)
local function toggleAction(_name, state, _input)
    if state ~= Enum.UserInputState.Begin then return Enum.ContextActionResult.Pass end
    if UserInputService:GetFocusedTextBox() then return Enum.ContextActionResult.Pass end
    if aimbotEnabled then disableAimbot() else enableAimbot() end
    return Enum.ContextActionResult.Sink
end
ContextAction:BindAction("ToggleAimbot", toggleAction, false, Enum.KeyCode.E)

-- ========= ESP IMPLEMENTATION =========

-- Get a Color3 from the player's team (robust across variants)
local function getTeamColor3(plr)
    -- Prefer Team.Color3 if available on the Team object
    if plr.Team then
        local ok, color = pcall(function()
            -- Try TeamColor (BrickColor) or Color (BrickColor) or a Color property
            if typeof(plr.Team.TeamColor) == "BrickColor" then
                return plr.Team.TeamColor.Color
            end
            if plr.Team.Color then -- some experiences set a Color3 directly
                return plr.Team.Color
            end
        end)
        if ok and color then return color end
    end
    -- Legacy: Player.TeamColor (BrickColor)
    if typeof(plr.TeamColor) == "BrickColor" then
        return plr.TeamColor.Color
    end
    -- Fallback
    return Color3.fromRGB(80, 180, 255)
end

local function buildNameTag(char, plr)
    local adornee = char:FindFirstChild("Head") or char:FindFirstChild("HumanoidRootPart") or char:FindFirstChildWhichIsA("BasePart")
    if not adornee then return nil end

    local bb = Instance.new("BillboardGui")
    bb.Name = "ESP_NameTag"
    bb.Adornee = adornee
    bb.Size = UDim2.fromOffset(200, 36)
    bb.ExtentsOffsetWorldSpace = Vector3.new(0, 2.5, 0)
    bb.AlwaysOnTop = true
    bb.MaxDistance = 250
    bb.ResetOnSpawn = false
    bb.Parent = screenGui

    local tl = Instance.new("TextLabel")
    tl.BackgroundTransparency = 1
    tl.Size = UDim2.fromScale(1, 1)
    tl.Font = Enum.Font.GothamBold
    tl.TextScaled = true
    tl.Text = plr.Name
    tl.TextColor3 = Color3.new(1, 1, 1)
    tl.TextStrokeTransparency = 0.5
    tl.Parent = bb

    return bb
end

local function buildHighlight(char, plr)
    local hl = Instance.new("Highlight")
    hl.Name = "ESP_Highlight"
    hl.Adornee = char
    hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop -- see through walls
    hl.OutlineColor = Color3.new(1, 1, 1)              -- white outline
    hl.OutlineTransparency = 0
    hl.FillTransparency = 0.55                          -- inner fill visible but not solid
    hl.FillColor = getTeamColor3(plr)
    hl.Parent = char
    return hl
end

local function removeESPFor(plr)
    local bundle = espRegistry[plr]
    if not bundle then return end
    if bundle.conns then
        for _, c in ipairs(bundle.conns) do pcall(function() c:Disconnect() end) end
    end
    if bundle.highlight then pcall(function() bundle.highlight:Destroy() end) end
    if bundle.tag then pcall(function() bundle.tag:Destroy() end) end
    espRegistry[plr] = nil
end

local function applyESPFor(plr)
    if plr == localPlayer then return end
    removeESPFor(plr)

    local char = plr.Character or plr.CharacterAdded:Wait()
    -- Build now; if parts missing, we'll rebuild on CharacterAdded below
    local hl = buildHighlight(char, plr)
    local tag = buildNameTag(char, plr)

    local conns = {}

    -- Rebuild on respawn
    table.insert(conns, plr.CharacterAdded:Connect(function(newChar)
        task.wait(0.05)
        -- destroy old
        if hl then pcall(function() hl:Destroy() end) hl = nil end
        if tag then pcall(function() tag:Destroy() end) tag = nil end
        -- rebuild
        hl = buildHighlight(newChar, plr)
        tag = buildNameTag(newChar, plr)
    end))

    -- Update colors on team changes
    local function updateTeamColor()
        local c3 = getTeamColor3(plr)
        if hl then hl.FillColor = c3 end
        if tag and tag:FindFirstChildOfClass("TextLabel") then
            -- keep username white for contrast, or tint slightly if you prefer
            tag.TextLabel.TextColor3 = Color3.new(1, 1, 1)
        end
    end
    table.insert(conns, plr:GetPropertyChangedSignal("Team"):Connect(updateTeamColor))
    table.insert(conns, plr:GetPropertyChangedSignal("TeamColor"):Connect(updateTeamColor))

    updateTeamColor()

    espRegistry[plr] = { highlight = hl, tag = tag, conns = conns }
end

local function enableESP()
    if espEnabled then return end
    espEnabled = true
    btnESP.Text = "ESP: ON"
    btnESP.BackgroundColor3 = Color3.fromRGB(25, 80, 35)
    -- Apply to all current players (except self)
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= localPlayer then
            task.spawn(function()
                applyESPFor(plr)
            end)
        end
    end
    -- Auto-apply to future players
    espRegistry._addedConn = Players.PlayerAdded:Connect(function(plr)
        task.spawn(function()
            -- wait for character spawn
            plr.CharacterAdded:Wait()
            if espEnabled then applyESPFor(plr) end
        end)
    end)
end

local function disableESP()
    if not espEnabled then return end
    espEnabled = false
    btnESP.Text = "ESP: OFF"
    btnESP.BackgroundColor3 = Color3.fromRGB(80, 25, 25)

    if espRegistry._addedConn then pcall(function() espRegistry._addedConn:Disconnect() end) espRegistry._addedConn = nil end
    for plr, bundle in pairs(espRegistry) do
        if typeof(plr) == "Instance" then
            if bundle.conns then for _, c in ipairs(bundle.conns) do pcall(function() c:Disconnect() end) end
            if bundle.highlight then pcall(function() bundle.highlight:Destroy() end) end
            if bundle.tag then pcall(function() bundle.tag:Destroy() end) end
            espRegistry[plr] = nil
        end
    end
end

btnESP.MouseButton1Click:Connect(function()
    if espEnabled then disableESP() else enableESP() end
end)

-- Defaults
local function init()
    -- visuals
    btnESP.Text = "ESP: OFF"
    btnESP.BackgroundColor3 = Color3.fromRGB(80, 25, 25)
    btnAimbot.Text = "Aimbot: OFF (E)"
    btnAimbot.BackgroundColor3 = Color3.fromRGB(80, 25, 25)
end

init()

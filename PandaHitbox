-- LocalScript (place this in StarterPlayerScripts or any client-side container)

-- Print and Commenting Setup
print("Initializing Hitbox Executor UI script...")

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

print("Services acquired")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HitboxExecutorUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
print("ScreenGui created and parented to PlayerGui")

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 240, 0, 140)
mainFrame.Position = UDim2.new(0.5, -120, 0.5, -70)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
print("MainFrame created with size and position")

-- UI Layout for compact children
local uiList = Instance.new("UIListLayout")
uiList.Padding = UDim.new(0, 6)
uiList.SortOrder = Enum.SortOrder.LayoutOrder
uiList.Parent = mainFrame

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 24)
titleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -50, 1, 0)
titleLabel.Position = UDim2.new(0, 8, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Hitbox Executor"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 14
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

-- Minimize Button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Name = "MinimizeButton"
minimizeBtn.Size = UDim2.new(0, 24, 0, 24)
minimizeBtn.Position = UDim2.new(1, -48, 0, 0)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
minimizeBtn.BorderSizePixel = 0
minimizeBtn.Text = "-"
minimizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 18
minimizeBtn.Parent = titleBar

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseButton"
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -24, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(175, 50, 50)
closeBtn.BorderSizePixel = 0
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 14
closeBtn.Parent = titleBar

print("Title bar, minimize, and close buttons added")

-- UI Controls Container
local controlsFrame = Instance.new("Frame")
controlsFrame.Name = "ControlsFrame"
controlsFrame.Size = UDim2.new(1, -16, 1, -30)
controlsFrame.Position = UDim2.new(0, 8, 0, 26)
controlsFrame.BackgroundTransparency = 1
controlsFrame.Parent = mainFrame

local controlsLayout = Instance.new("UIListLayout")
controlsLayout.Padding = UDim.new(0, 4)
controlsLayout.SortOrder = Enum.SortOrder.LayoutOrder
controlsLayout.Parent = controlsFrame

-- Toggle Button
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleHitboxButton"
toggleBtn.Size = UDim2.new(1, 0, 0, 28)
toggleBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleBtn.BorderSizePixel = 0
toggleBtn.Text = "Toggle Hitboxes"
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Font = Enum.Font.Gotham
toggleBtn.TextSize = 14
toggleBtn.LayoutOrder = 1
toggleBtn.Parent = controlsFrame

-- Size Input Label
local sizeLabel = Instance.new("TextLabel")
sizeLabel.Name = "SizeLabel"
sizeLabel.Size = UDim2.new(1, 0, 0, 18)
sizeLabel.BackgroundTransparency = 1
sizeLabel.Text = "Hitbox Size (studs)"
sizeLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
sizeLabel.Font = Enum.Font.Gotham
sizeLabel.TextSize = 12
sizeLabel.LayoutOrder = 2
sizeLabel.Parent = controlsFrame

-- Size Input Box
local sizeInput = Instance.new("TextBox")
sizeInput.Name = "SizeInput"
sizeInput.Size = UDim2.new(1, 0, 0, 24)
sizeInput.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
sizeInput.BorderSizePixel = 0
sizeInput.Text = "3"
sizeInput.PlaceholderText = "e.g. 4"
sizeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
sizeInput.Font = Enum.Font.Gotham
sizeInput.TextSize = 14
sizeInput.ClearTextOnFocus = false
sizeInput.LayoutOrder = 3
sizeInput.Parent = controlsFrame

print("UI controls created")

-- Draggable Logic Variables
local dragging, dragInput, dragStart, startPos
local function updateDrag(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end

-- Make TitleBar draggable
titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

print("Draggable logic connected")

-- Minimize and Close Functionality
local isMinimized = false
local savedSize = mainFrame.Size
local savedPos = mainFrame.Position

minimizeBtn.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        savedSize = mainFrame.Size
        savedPos = mainFrame.Position
        mainFrame.Size = UDim2.new(0, 240, 0, 24)
        mainFrame.Position = UDim2.new(savedPos.X.Scale, savedPos.X.Offset, savedPos.Y.Scale, savedPos.Y.Offset)
        controlsFrame.Visible = false
        minimizeBtn.Text = "+"
        print("UI minimized")
    else
        mainFrame.Size = savedSize
        mainFrame.Position = savedPos
        controlsFrame.Visible = true
        minimizeBtn.Text = "-"
        print("UI restored")
    end
end)

closeBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
    print("UI destroyed")
end)

-- Hitbox Adornments Management
local adornments = {}
local hitboxEnabled = false
local currentSize = Vector3.new(3, 3, 3)

-- Function to apply adornment to a character
local function applyHitbox(character)
    if adornments[character] then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local box = Instance.new("BoxHandleAdornment")
    box.Adornee = hrp
    box.AlwaysOnTop = true
    box.ZIndex = 0
    box.Size = currentSize
    box.Transparency = 0.7
    box.Color3 = Color3.fromRGB(255, 255, 255)
    box.Parent = hrp
    adornments[character] = box

    print("Applied hitbox to:", character.Name)
end

-- Function to remove adornment from a character
local function removeHitbox(character)
    local box = adornments[character]
    if box then
        box:Destroy()
        adornments[character] = nil
        print("Removed hitbox from:", character.Name)
    end
end

-- Update hitboxes for all players
local function updateAllHitboxes()
    for _, pl in pairs(Players:GetPlayers()) do
        local char = pl.Character
        if char then
            if hitboxEnabled then
                applyHitbox(char)
            else
                removeHitbox(char)
            end
        end
    end
end

-- Connections for character spawn and player join
Players.PlayerAdded:Connect(function(pl)
    pl.CharacterAdded:Connect(function(char)
        RunService.Heartbeat:Wait()
        if hitboxEnabled then
            applyHitbox(char)
        end
    end)
end)

for _, pl in pairs(Players:GetPlayers()) do
    if pl.Character then
        Players.PlayerAdded:Fire(pl) -- trigger initial apply
    end
end

print("Player events bound")

-- Toggle Button Event
toggleBtn.MouseButton1Click:Connect(function()
    hitboxEnabled = not hitboxEnabled
    updateAllHitboxes()
    print("Hitbox toggled:", hitboxEnabled)
end)

-- Size Input Event
sizeInput.FocusLost:Connect(function(enterPressed)
    if not enterPressed then return end
    local num = tonumber(sizeInput.Text)
    if num and num > 0 then
        currentSize = Vector3.new(num, num, num)
        -- Update existing adornments
        for char, box in pairs(adornments) do
            box.Size = currentSize
        end
        print("Hitbox size updated to:", currentSize)
    else
        print("Invalid size input:", sizeInput.Text)
        sizeInput.Text = tostring(currentSize.X)
    end
end)

print("UI fully initialized and operational")

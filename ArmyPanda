-- Admin Executor UI
local Players       = game:GetService("Players")
local RunService    = game:GetService("RunService")

local localPlayer   = Players.LocalPlayer
local playerGui     = localPlayer:WaitForChild("PlayerGui")

-- Cleanup existing UI if present
if _G.AdminExecutorUI then
    _G.AdminExecutorUI:Destroy()
    _G.AdminExecutorConnections = nil
end

-- State variables
local followEnabled, followTargetName, followTargetPlayer
local attackEnabled, attackNames = false, {}
local followConn, attackConn
local connections = {}

-- Utility: Find the player whose name best matches the given input
local function findClosestPlayer(name)
    name = name:lower()
    local best, bestScore
    for _, pl in ipairs(Players:GetPlayers()) do
        if pl ~= localPlayer then
            local plName = pl.Name:lower()
            if plName:find(name, 1, true) then
                return pl
            end
            local score = math.abs(#plName - #name)
            if not bestScore or score < bestScore then
                bestScore, best = score, pl
            end
        end
    end
    return best
end

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "AdminExecutorUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui
_G.AdminExecutorUI = screenGui

-- Main frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 260, 0, 210)
mainFrame.Position = UDim2.new(0.3, 0, 0.2, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 8)

-- Title bar
local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0,  Thirty)
titleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleBar.BorderSizePixel = 0
Instance.new("UICorner", titleBar).CornerRadius = UDim.new(0, 6)

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, -70, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Admin Executor"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 16
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Close button
local closeBtn = Instance.new("TextButton", titleBar)
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -30, 0.5, -12)
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 20, 20)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 18
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 6)

-- Minimize/Expand button
local minBtn = Instance.new("TextButton", titleBar)
minBtn.Size = UDim2.new(0, 24, 0, 24)
minBtn.Position = UDim2.new(1, -60, 0.5, -12)
minBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 20)
minBtn.Font = Enum.Font.GothamBold
minBtn.TextSize = 18
minBtn.Text = "-"
minBtn.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", minBtn).CornerRadius = UDim.new(0, 6)

-- Content container
local content = Instance.new("Frame", mainFrame)
content.Size = UDim2.new(1, -10, 1, -40)
content.Position = UDim2.new(0, 5, 0, 35)
content.BackgroundTransparency = 1

local listLayout = Instance.new("UIListLayout", content)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 6)

-- Follow controls
local followHolder = Instance.new("Frame", content)
followHolder.Size = UDim2.new(1, 0, 0, 30)
followHolder.BackgroundTransparency = 1

local followLayout = Instance.new("UIListLayout", followHolder)
followLayout.FillDirection = Enum.FillDirection.Horizontal
followLayout.Padding = UDim.new(0, 6)
followLayout.SortOrder = Enum.SortOrder.LayoutOrder

local followBtn = Instance.new("TextButton", followHolder)
followBtn.Size = UDim2.new(0, 80, 1, 0)
followBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
followBtn.Font = Enum.Font.GothamBold
followBtn.TextSize = 14
followBtn.Text = "Follow: Off"
followBtn.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", followBtn).CornerRadius = UDim.new(0, 6)

local followBox = Instance.new("TextBox", followHolder)
followBox.Size = UDim2.new(1, -90, 1, 0)
followBox.PlaceholderText = "Username"
followBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
followBox.Font = Enum.Font.Gotham
followBox.TextSize = 14
followBox.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", followBox).CornerRadius = UDim.new(0, 6)

local followHint = Instance.new("TextLabel", content)
followHint.Size = UDim2.new(1, 0, 0, 20)
followHint.BackgroundTransparency = 1
followHint.Text = "Say 'follow me' / 'stay' to toggle"
followHint.Font = Enum.Font.Gotham
followHint.TextSize = 12
followHint.TextColor3 = Color3.fromRGB(200, 200, 200)
followHint.TextXAlignment = Enum.TextXAlignment.Left

-- Attack controls
local attackHolder = Instance.new("Frame", content)
attackHolder.Size = UDim2.new(1, 0, 0, 30)
attackHolder.BackgroundTransparency = 1

local attackLayout = Instance.new("UIListLayout", attackHolder)
attackLayout.FillDirection = Enum.FillDirection.Horizontal
attackLayout.Padding = UDim.new(0, 6)
attackLayout.SortOrder = Enum.SortOrder.LayoutOrder

local attackBtn = Instance.new("TextButton", attackHolder)
attackBtn.Size = UDim2.new(0, 80, 1, 0)
attackBtn.BackgroundColor3 = Color3.fromRGB(60, 20, 20)
attackBtn.Font = Enum.Font.GothamBold
attackBtn.TextSize = 14
attackBtn.Text = "Attack: Off"
attackBtn.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", attackBtn).CornerRadius = UDim.new(0, 6)

local attackBox = Instance.new("TextBox", attackHolder)
attackBox.Size = UDim2.new(1, -90, 1, 0)
attackBox.PlaceholderText = "User1, User2"
attackBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
attackBox.Font = Enum.Font.Gotham
attackBox.TextSize = 14
attackBox.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", attackBox).CornerRadius = UDim.new(0, 6)

-- Follow routine
local function startFollow()
    if followConn then followConn:Disconnect() end
    followConn = RunService.Heartbeat:Connect(function()
        if not followEnabled or not followTargetPlayer then return end
        local myChar = localPlayer.Character
        local theirChar = followTargetPlayer.Character
        if not (myChar and theirChar) then return end

        local myRoot = myChar:FindFirstChild("HumanoidRootPart")
        local theirRoot = theirChar:FindFirstChild("HumanoidRootPart")
        if not (myRoot and theirRoot) then return end

        local dist = (theirRoot.Position - myRoot.Position).Magnitude
        if dist > 6 then
            localPlayer.Character.Humanoid:MoveTo(theirRoot.Position)
        end
    end)
    table.insert(connections, followConn)
end

-- Attack routine
local function startAttack()
    if attackConn then attackConn:Disconnect() end
    attackConn = RunService.Heartbeat:Connect(function()
        if not attackEnabled or #attackNames == 0 then return end
        local myChar = localPlayer.Character
        if not myChar then return end
        local myRoot = myChar:FindFirstChild("HumanoidRootPart")
        if not myRoot then return end

        local closestDist, targetPos
        for _, uname in ipairs(attackNames) do
            local pl = findClosestPlayer(uname)
            if pl and pl.Character then
                local hrp = pl.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local d = (hrp.Position - myRoot.Position).Magnitude
                    if not closestDist or d < closestDist then
                        closestDist, targetPos = d, hrp.Position
                    end
                end
            end
        end

        if targetPos then
            localPlayer.Character.Humanoid:MoveTo(targetPos)
        end
    end)
    table.insert(connections, attackConn)
end

-- Button callbacks

followBtn.MouseButton1Click:Connect(function()
    followEnabled = not followEnabled
    followBtn.Text = "Follow: " .. (followEnabled and "On" or "Off")
    if followEnabled then
        followTargetName = followBox.Text
        followTargetPlayer = findClosestPlayer(followTargetName)
        if followTargetPlayer then
            startFollow()
        end
    end
end)

attackBtn.MouseButton1Click:Connect(function()
    attackEnabled = not attackEnabled
    attackBtn.Text = "Attack: " .. (attackEnabled and "On" or "Off")
    if attackEnabled then
        -- parse comma-separated usernames
        attackNames = {}
        for name in attackBox.Text:gmatch("([^,]+)") do
            table.insert(attackNames, name:match("^%s*(.-)%s*$"))
        end
        startAttack()
    end
end)

-- Chat triggers for follow
for _, pl in ipairs(Players:GetPlayers()) do
    connections[#connections+1] = pl.Chatted:Connect(function(msg)
        if not followEnabled and pl == followTargetPlayer then
            local m = msg:lower()
            if m:match("^follow me") then
                followEnabled = true
                followBtn.Text = "Follow: On"
                startFollow()
            elseif m:match("^stay") then
                followEnabled = false
                followBtn.Text = "Follow: Off"
            end
        end
    end)
end
connections[#connections+1] = Players.PlayerAdded:Connect(function(pl)
    connections[#connections+1] = pl.Chatted:Connect(function(msg)
        if not followEnabled and pl == followTargetPlayer then
            local m = msg:lower()
            if m:match("^follow me") then
                followEnabled = true
                followBtn.Text = "Follow: On"
                startFollow()
            elseif m:match("^stay") then
                followEnabled = false
                followBtn.Text = "Follow: Off"
            end
        end
    end)
end)

-- Minimize/expand logic
local isMinimized = false
minBtn.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    content.Visible = not isMinimized
    mainFrame.Size = isMinimized and UDim2.new(0, 260, 0, 30)
                               or UDim2.new(0, 260, 0, 210)
    minBtn.Text = isMinimized and "+" or "-"
end)

-- Close logic
closeBtn.MouseButton1Click:Connect(function()
    for _, conn in ipairs(connections) do
        if conn.Disconnect then conn:Disconnect() end
    end
    screenGui:Destroy()
end)

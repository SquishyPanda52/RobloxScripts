-- Hilton | ArmLock C (Intercept Animations + Late Priority Pose)
-- Client-only. Run once to lock, run again to unlock.

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local G = getgenv and getgenv() or _G
G.__ArmLockC = G.__ArmLockC or { active=false, conns={}, joints=nil, stepName="ArmLockC_Step" }

local CONFIG = {
    SHOULDER_DEG = 70,
    LOG = true,
}
local function log(...) if CONFIG.LOG then print("[ArmLockC]", ...) end end

local function getCharHum()
    local plr = Players.LocalPlayer
    local char = plr.Character or plr.CharacterAdded:Wait()
    local hum = char:FindFirstChildOfClass("Humanoid") or char:WaitForChild("Humanoid")
    return char, hum
end

local function resolveShoulder(char)
    local rua = char:FindFirstChild("RightUpperArm")
    if rua then
        local sh = rua:FindFirstChild("RightShoulder")
            or (char:FindFirstChild("UpperTorso") and char.UpperTorso:FindFirstChild("RightShoulder"))
        if sh and sh:IsA("Motor6D") then return sh end
    end
    local torso = char:FindFirstChild("Torso")
    local shR6 = torso and torso:FindFirstChild("Right Shoulder")
    if shR6 and shR6:IsA("Motor6D") then return shR6 end
    return nil
end

local function cleanup()
    pcall(function() RunService:UnbindFromRenderStep(G.__ArmLockC.stepName) end)
    for i=#G.__ArmLockC.conns,1,-1 do pcall(function() G.__ArmLockC.conns[i]:Disconnect() end) ; G.__ArmLockC.conns[i]=nil end
    if G.__ArmLockC.joints and G.__ArmLockC.joints.s then pcall(function() G.__ArmLockC.joints.s.Transform = CFrame.new() end) end
    G.__ArmLockC.joints=nil
    G.__ArmLockC.active=false
    log("Cleaned up.")
end

if G.__ArmLockC.active then cleanup() return end
G.__ArmLockC.active=true

local char, hum = getCharHum()
local joints = { s = resolveShoulder(char) }
if not joints.s then
    log("No shoulder joint found.")
    return cleanup()
end
G.__ArmLockC.joints = joints

-- Stop current tracks (all), then intercept future ones immediately
for _,track in ipairs(hum:GetPlayingAnimationTracks()) do pcall(function() track:Stop(0) end) end
table.insert(G.__ArmLockC.conns, hum.AnimationPlayed:Connect(function(track)
    -- Kill any new animation as soon as it starts (prevents reclaiming the limb)
    pcall(function() track:Stop(0) end)
end))

local SHOULDER_ANG = CFrame.Angles(math.rad(-CONFIG.SHOULDER_DEG), 0, 0)
local PRIORITY = (Enum.RenderPriority.Last.Value + 1)

RunService:BindToRenderStep(G.__ArmLockC.stepName, PRIORITY, function()
    if not joints.s or not joints.s.Parent then
        local c = Players.LocalPlayer.Character
        if c then joints.s = resolveShoulder(c) end
        if not joints.s then return end
    end
    joints.s.Transform = SHOULDER_ANG
end)

-- Respawn handling: re-hook and re-resolve
table.insert(G.__ArmLockC.conns, Players.LocalPlayer.CharacterAdded:Connect(function(newChar)
    task.wait(0.1)
    char = newChar
    hum = newChar:FindFirstChildOfClass("Humanoid") or newChar:WaitForChild("Humanoid")
    joints.s = resolveShoulder(newChar)
    -- Rehook AnimationPlayed for the new humanoid
    table.insert(G.__ArmLockC.conns, hum.AnimationPlayed:Connect(function(track)
        pcall(function() track:Stop(0) end)
    end))
end))

log("Locked right arm with animation interception and late-priority transform.")

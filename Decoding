--[[
  Hilton | Locked Arm Pose (Animation Hijack + Transform)
  Client-only, re-exec safe
]]

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local G = getgenv and getgenv() or _G
G.__LockedArm = G.__LockedArm or { active=false, conns={}, joints={} }

local function cleanup()
    for _,c in ipairs(G.__LockedArm.conns) do pcall(function() c:Disconnect() end) end
    for _,m in pairs(G.__LockedArm.joints) do pcall(function() m.Transform = CFrame.new() end) end
    table.clear(G.__LockedArm.conns)
    table.clear(G.__LockedArm.joints)
    G.__LockedArm.active=false
end

if G.__LockedArm.active then
    cleanup()
    print("[LockedArm] Cleanup complete.")
    return
end

G.__LockedArm.active=true

local char = Players.LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()

-- Kill animation tracks affecting the right arm
for _, track in ipairs(char:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks()) do
    if track.Priority ~= Enum.AnimationPriority.Idle then
        track:Stop(0)
    end
end

-- Grab joints (R15 shoulder/elbow or R6 shoulder)
local joints = {}
local rua = char:FindFirstChild("RightUpperArm")
if rua then
    local sh = rua:FindFirstChildWhichIsA("Motor6D") or char:FindFirstChild("UpperTorso"):FindFirstChild("RightShoulder")
    if sh then joints.s = sh end
end
if not joints.s then
    local torso = char:FindFirstChild("Torso")
    local shR6 = torso and torso:FindFirstChild("Right Shoulder")
    if shR6 then joints.s = shR6 end
end

G.__LockedArm.joints = joints

-- Fixed pose angles
local SHOULDER_ANG = CFrame.Angles(math.rad(-70), 0, 0)

G.__LockedArm.conns[#G.__LockedArm.conns+1] =
    RunService.RenderStepped:Connect(function()
        if joints.s then joints.s.Transform = SHOULDER_ANG end
    end)

print("[LockedArm] Applied and locked pose.")

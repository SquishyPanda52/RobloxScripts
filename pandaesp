--[[ ESP Executor Script (full UI + logic, respawn-robust)
   - Compact, draggable, minimisable UI
   - ESP toggle + team whitelist filter
   - Red, transparent fill; health-based outline
   - Longâ€‘range names
   - Retries until Humanoid/Head exist after spawn
]]

--====== CONFIG ======--
local FILL_COLOR = Color3.fromRGB(255, 0, 0)
local FILL_TRANSPARENCY = 0.85
local NAME_MAX_DISTANCE = 2000

--====== SERVICES ======--
local Players   = game:GetService("Players")
local UserInput = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer
local playerGui   = localPlayer:WaitForChild("PlayerGui")

local espEnabled  = false
local teamFilters = {}
local highlights  = {}

--====== UI CREATION ======--
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ESPExecutorUI"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.DisplayOrder = 999999
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 260, 0, 120)
mainFrame.Position = UDim2.new(0.35, 0, 0.35, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 26)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.BackgroundTransparency = 1
titleLabel.Size = UDim2.new(1, -60, 1, 0)
titleLabel.Position = UDim2.new(0, 8, 0, 0)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 14
titleLabel.TextColor3 = Color3.fromRGB(235, 235, 235)
titleLabel.Text = "ESP Admin"
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

local btnMin = Instance.new("TextButton")
btnMin.Size = UDim2.new(0, 26, 0, 26)
btnMin.Position = UDim2.new(1, -52, 0, 0)
btnMin.Font = Enum.Font.GothamBold
btnMin.TextSize = 18
btnMin.Text = "-"
btnMin.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
btnMin.TextColor3 = Color3.fromRGB(240, 240, 240)
btnMin.Parent = titleBar

local btnClose = Instance.new("TextButton")
btnClose.Size = UDim2.new(0, 26, 0, 26)
btnClose.Position = UDim2.new(1, -26, 0, 0)
btnClose.Font = Enum.Font.GothamBold
btnClose.TextSize = 18
btnClose.Text = "X"
btnClose.BackgroundColor3 = Color3.fromRGB(80, 20, 20)
btnClose.TextColor3 = Color3.fromRGB(255, 200, 200)
btnClose.Parent = titleBar

local btnToggle = Instance.new("TextButton")
btnToggle.Size = UDim2.new(1, -16, 0, 30)
btnToggle.Position = UDim2.new(0, 8, 0, 36)
btnToggle.Font = Enum.Font.GothamBold
btnToggle.TextSize = 14
btnToggle.Text = "ESP: OFF"
btnToggle.BackgroundColor3 = Color3.fromRGB(80, 30, 30)
btnToggle.TextColor3 = Color3.fromRGB(240, 240, 240)
btnToggle.Parent = mainFrame

local txtFilter = Instance.new("TextBox")
txtFilter.Size = UDim2.new(1, -16, 0, 24)
txtFilter.Position = UDim2.new(0, 8, 0, 76)
txtFilter.Font = Enum.Font.Gotham
txtFilter.TextSize = 14
txtFilter.PlaceholderText = "Teams (comma separated)"
txtFilter.ClearTextOnFocus = false
txtFilter.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
txtFilter.TextColor3 = Color3.fromRGB(240, 240, 240)
txtFilter.Parent = mainFrame

local minBar = Instance.new("TextButton")
minBar.Size = UDim2.new(0, 100, 0, 26)
minBar.Font = Enum.Font.GothamBold
minBar.TextSize = 14
minBar.Text = "ESP +"
minBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
minBar.TextColor3 = Color3.fromRGB(235, 235, 235)
minBar.Visible = false
minBar.Parent = screenGui

-- Dragging
local function makeDraggable(frame, handle)
  local dragging, dragInput, dragStart, startPos
  local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(
      startPos.X.Scale, startPos.X.Offset + delta.X,
      startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
  end
  handle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
      dragging = true
      dragStart = input.Position
      startPos = frame.Position
      input.Changed:Connect(function()
        if input.UserInputState == Enum.UserInputState.End then dragging = false end
      end)
    end
  end)
  handle.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
      dragInput = input
    end
  end)
  UserInput.InputChanged:Connect(function(input)
    if dragging and input == dragInput then update(input) end
  end)
end
makeDraggable(mainFrame, titleBar)
makeDraggable(minBar, minBar)

btnMin.MouseButton1Click:Connect(function()
  minBar.Position = mainFrame.Position
  mainFrame.Visible = false
  minBar.Visible = true
end)
minBar.MouseButton1Click:Connect(function()
  mainFrame.Position = minBar.Position
  mainFrame.Visible = true
  minBar.Visible = false
end)

--====== LOGIC ======--
local function trim(s) return (s:match("^%s*(.-)%s*$")) end
local function updateFilters(text)
  teamFilters = {}
  for name in (text or ""):lower():gmatch("([^,]+)") do
    name = trim(name)
    if name ~= "" then table.insert(teamFilters, name) end
  end
end
txtFilter:GetPropertyChangedSignal("Text"):Connect(function()
  updateFilters(txtFilter.Text)
end)
updateFilters("")

local function healthToColor(hp, maxHp)
  local frac = maxHp > 0 and math.clamp(hp/maxHp, 0, 1) or 0
  return Color3.fromHSV(frac * 0.33, 1, 1)
end

local function getAdorneePart(char)
  return char:FindFirstChild("Head") or char:FindFirstChild("HumanoidRootPart")
end

local function waitForCharacterReady(plr, timeout)
  local t0 = os.clock()
  local char = plr.Character or plr.CharacterAdded:Wait()
  local humanoid = char:FindFirstChildOfClass("Humanoid")
  while not humanoid and os.clock() - t0 < timeout do
    humanoid = char:FindFirstChildOfClass("Humanoid")
    task.wait(0.1)
  end
  local adornee = getAdorneePart(char)
  while not adornee and os.clock() - t0 < timeout do
    adornee = getAdorneePart(char)
    task.wait(0.1)
  end
  return char, humanoid, adornee
end

local function destroyESP(plr)
  local data = highlights[plr]
  if not data then return end
  for _, c in ipairs(data.conns) do pcall(function() c:Disconnect() end) end
  if data.bb then data.bb:Destroy() end
  if data.hl then data.hl:Destroy() end
  highlights[plr] = nil
end

local function applyESP(plr)
  destroyESP(plr)
  local char, humanoid, adornee = waitForCharacterReady(plr, 8)
  if not char or not humanoid then return false end

  local hl = Instance.new("Highlight")
  hl.Parent = char
  hl.FillColor = FILL_COLOR
  hl.FillTransparency = FILL_TRANSPARENCY
  hl.OutlineTransparency = 0
  hl.OutlineColor = healthToColor

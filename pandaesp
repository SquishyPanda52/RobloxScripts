--[[ ESP Executor Script (respawn-robust, red+transparent fill, long-range names)
  - Collapsible "ESP +" bar, draggable (min + restore)
  - X fully deletes UI and script
  - ESP toggle + team whitelist filter (comma separated)
  - Respawn-safe: retries until Humanoid/parts exist
  - Fill is RED and more transparent; name tags visible from farther away
]]

-- Tunables
local FILL_COLOR = Color3.fromRGB(255, 0, 0)  -- red fill
local FILL_TRANSPARENCY = 0.85                -- more transparent (0=solid, 1=invisible)
local NAME_MAX_DISTANCE = 2000                -- farther name visibility (if property exists)

-- Services
local Players   = game:GetService("Players")
local UserInput = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer
local playerGui   = localPlayer:WaitForChild("PlayerGui")

-- State
local espEnabled  = false
local teamFilters = {}
local highlights  = {} -- [Player] = {hl=Highlight, bb=BillboardGui, conns={...}}

--========== UI CREATION ==========
-- ...[UI creation code identical to your last working version]...
-- (Omitted here for brevity â€” keep your existing GUI setup)

--========== UTILS ==========
local function trim(s) return (s:match("^%s*(.-)%s*$")) end
local function updateFilters(text)
    teamFilters = {}
    for name in (text or ""):lower():gmatch("([^,]+)") do
        name = trim(name)
        if name ~= "" then table.insert(teamFilters, name) end
    end
end
updateFilters("")

local function healthToColor(hp, maxHp)
    local frac = 0
    if maxHp and maxHp > 0 then frac = math.clamp(hp/maxHp, 0, 1) end
    return Color3.fromHSV(frac * 0.33, 1, 1)
end

local function getAdorneePart(character)
    if not character then return nil end
    return character:FindFirstChild("Head")
        or character:FindFirstChild("HumanoidRootPart")
        or character:FindFirstChildWhichIsA("BasePart")
end

-- Retry-wrapped character readiness
local function waitForCharacterReady(plr, timeout)
    local t0 = os.clock()
    timeout = timeout or 10
    local char = plr.Character or plr.CharacterAdded:Wait()
    if not char then return nil end
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    while not humanoid and os.clock() - t0 < timeout do
        humanoid = char:FindFirstChildOfClass("Humanoid")
        task.wait(0.1)
    end
    if not humanoid then return nil end
    local adornee = getAdorneePart(char)
    while not adornee and os.clock() - t0 < timeout do
        adornee = getAdorneePart(char)
        task.wait(0.1)
    end
    return char, humanoid, adornee
end

local function destroyESP(plr)
    local data = highlights[plr]
    if not data then return end
    if data.conns then for _, c in ipairs(data.conns) do pcall(function() c:Disconnect() end) end end
    if data.bb then pcall(function() data.bb:Destroy() end) end
    if data.hl then pcall(function() data.hl:Destroy() end) end
    highlights[plr] = nil
end

-- Apply ESP to a single player
local function applyESP(plr)
    destroyESP(plr)
    local char, humanoid, adornee = waitForCharacterReady(plr, 8)
    if not char or not humanoid then return false end

    -- Highlight
    local hl = Instance.new("Highlight")
    hl.Name = "ESP_Highlight"
    hl.Parent = char
    hl.FillColor = FILL_COLOR
    hl.FillTransparency = FILL_TRANSPARENCY
    hl.OutlineTransparency = 0
    hl.OutlineColor = healthToColor(humanoid.Health, humanoid.MaxHealth)
    hl.Enabled = false

    -- Name tag
    local bb = Instance.new("BillboardGui")
    bb.Name = "ESP_Name"
    bb.Size = UDim2.new(0, 80, 0, 16)
    bb.StudsOffset = Vector3.new(0, 3, 0)
    bb.AlwaysOnTop = true
    bb.Enabled = false
    pcall(function() bb.MaxDistance = NAME_MAX_DISTANCE end)
    if adornee then
        bb.Adornee = adornee
        bb.Parent = adornee
    else
        bb.Parent = char
    end
    local lbl = Instance.new("TextLabel")
    lbl.BackgroundTransparency = 1
    lbl.Size = UDim2.new(1, 0, 1, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 12
    lbl.Text = plr.DisplayName
    lbl.TextColor3 = Color3.fromRGB(255,255,255)
    lbl.TextStrokeTransparency = 0.5
    lbl.Parent = bb

    -- Connections
    local conns = {}
    table.insert(conns, humanoid.HealthChanged:Connect(function(hp)
        hl.OutlineColor = healthToColor(hp, humanoid.MaxHealth)
    end))
    table.insert(conns, humanoid.Died:Connect(function() destroyESP(plr) end))
    table.insert(conns, plr.CharacterRemoving:Connect(function() destroyESP(plr) end))

    highlights[plr] = { hl = hl, bb = bb, conns = conns }

    -- Show/hide based on filters
    local teamName = (plr.Team and plr.Team.Name:lower()) or ""
    local pass = (#teamFilters == 0) or table.find(teamFilters, teamName)
    hl.Enabled = espEnabled and pass
    bb.Enabled = espEnabled and pass

    return true
end

--========== RESPAWN BINDER (HARDENED) ==========
local function bindPlayer(plr)
    -- On spawn
    plr.CharacterAdded:Connect(function()
        task.spawn(function()
            local deadline = os.clock() + 8
            while os.clock() < deadline do
                if applyESP(plr) then break end
                task.wait(0.25)
            end
        end)
    end)
    -- On appearance loaded
    plr.CharacterAppearanceLoaded:Connect(function()
        task.spawn(function()
            local deadline = os.clock() + 5
            while os.clock() < deadline do
                if applyESP(plr) then break end
                task.wait(0.25)
            end
        end)
    end)
    -- On team change
    plr:GetPropertyChangedSignal("Team"):Connect(function()
        if highlights[plr] then
            local data = highlights[plr]
            local teamName = (plr.Team and plr.Team.Name:lower()) or ""
            local pass = (#teamFilters == 0) or table.find(teamFilters, teamName)
            if data.hl then data.hl.Enabled = espEnabled and pass end
            if data.bb then data.bb.Enabled = espEnabled and pass end
        elseif espEnabled then
            task.spawn(function()
                local deadline = os.clock() + 5
                while os.clock() < deadline do
                    if applyESP(plr) then break end
                    task.wait(0.25)
                end
            end)
        end
    end)
    -- If already spawned
    if plr.Character then
        task.spawn(function()
            local deadline = os.clock() + 5
            while os.clock() < deadline do
                if applyESP(plr) then break end
                task.wait(0.25)
            end
        end)
    end
end

--========== PLAYER HOOKUP ==========
Players.PlayerAdded:Connect(function(plr)
    if plr ~= localPlayer then bindPlayer(plr) end
end)
Players.PlayerRemoving:Connect(destroyESP)
for _,plr in ipairs(Players:GetPlayers()) do
    if plr ~= localPlayer then bindPlayer(plr) end
end

--========== TOGGLE LOGIC / UI HOOKS ==========
-- Keep your existing btnToggle, btnClose, txtFilter logic from before, no change needed

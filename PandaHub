-- Panda Fly (runtime-only, client-side)
-- Device select -> PC/Mobile fly UIs, draggable/minimizable, themed greenâ†’yellow
-- Torso-based flight; animations off while flying; auto-off on death and on UI delete

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInput = game:GetService("UserInputService")
local Content = game:GetService("ContentProvider")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- ScreenGui root (idempotent)
local guiParent = player:FindFirstChild("PlayerGui") or game:GetService("CoreGui")
local old = guiParent:FindFirstChild("PandaFlyGUI")
if old then old:Destroy() end
local gui = Instance.new("ScreenGui")
gui.Name = "PandaFlyGUI"
gui.DisplayOrder = 10_000_000
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = guiParent

-- Assets (provided)
local PANDA = "rbxassetid://140281572489473"
local PCIMG = "rbxassetid://75277585107743"
local PHIMG = "rbxassetid://75163729493008"
pcall(function() Content:PreloadAsync({PANDA, PCIMG, PHIMG}) end)

-- Theme
local C_TOPBAR = Color3.fromRGB(40, 120, 30)   -- distinct top tab
local C_BTN    = Color3.fromRGB(0, 140, 0)     -- button dark green
local C_TEXT   = Color3.new(1,1,1)
local C_BLACK  = Color3.new(0,0,0)
local GRAD_A   = Color3.fromRGB(0,255,0)       -- bright green
local GRAD_B   = Color3.fromRGB(255,255,0)     -- yellow

-- Style helpers
local function corner(p, r) local c=Instance.new("UICorner"); c.CornerRadius=UDim.new(0, r or 10); c.Parent=p end
local function stroke(p, t) local s=Instance.new("UIStroke"); s.Color=C_BLACK; s.Thickness=t or 1; s.Parent=p end
local function gradient(p, a, b, rot)
    local g=Instance.new("UIGradient")
    g.Color = ColorSequence.new(a or GRAD_A, b or GRAD_B)
    g.Rotation = rot or 90
    g.Parent = p
end
local function fontify(lblOrBtn)
    lblOrBtn.Font = Enum.Font.Bangers -- bold, comical
    lblOrBtn.TextColor3 = C_TEXT
    lblOrBtn.TextStrokeColor3 = C_BLACK
    lblOrBtn.TextStrokeTransparency = 0
end
local function styleButton(btn)
    btn.BackgroundColor3 = C_BTN
    btn.AutoButtonColor = true
    btn.TextScaled = true
    fontify(btn); corner(btn, 8); stroke(btn, 1)
end

-- Drag logic (panel or mini)
local function makeDraggable(panel, handle)
    local dragging=false
    local dragStart, startPos
    handle.InputBegan:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
            dragging=true; dragStart = input.Position; startPos = panel.Position
            input.Changed:Connect(function()
                if input.UserInputState==Enum.UserInputState.End then dragging=false end
            end)
        end
    end)
    handle.InputChanged:Connect(function(input)
        if not dragging then return end
        if input.UserInputType==Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch then
            local delta = input.Position - dragStart
            panel.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- Flight state
local mode = "none" -- "pc" | "phone"
local flying = false
local speed = 16
local flightConn, orientConn, deathConn
local key = {W=false,A=false,S=false,D=false}
local kbConns = {}

-- Physics attachments
local rootAtt, align, antiGrav

local function character()
    return player.Character or player.CharacterAdded:Wait()
end

local function humanoid()
    local c = character()
    return c:FindFirstChildOfClass("Humanoid")
end

local function rootPart()
    local c = character()
    return c and c:FindFirstChild("HumanoidRootPart")
end

local function stopAnimations(hum)
    for _, track in ipairs(hum:GetPlayingAnimationTracks()) do
        track:Stop(0.1)
    end
end

local function cleanupFlight()
    flying = false
    if flightConn then flightConn:Disconnect(); flightConn=nil end
    if orientConn then orientConn:Disconnect(); orientConn=nil end
    if align then align:Destroy(); align=nil end
    if antiGrav then antiGrav:Destroy(); antiGrav=nil end
    if rootAtt then rootAtt:Destroy(); rootAtt=nil end
    for _,c in ipairs(kbConns) do c:Disconnect() end
    kbConns = {}
    local hum = humanoid()
    if hum then hum.AutoRotate = true end
end

local function bindPCKeys()
    for _,c in ipairs(kbConns) do c:Disconnect() end
    kbConns = {}
    table.insert(kbConns, UserInput.InputBegan:Connect(function(inp, gp)
        if gp then return end
        if UserInput:GetFocusedTextBox() then return end
        if inp.KeyCode==Enum.KeyCode.W then key.W=true end
        if inp.KeyCode==Enum.KeyCode.A then key.A=true end
        if inp.KeyCode==Enum.KeyCode.S then key.S=true end
        if inp.KeyCode==Enum.KeyCode.D then key.D=true end
        if inp.KeyCode==Enum.KeyCode.E and mode=="pc" then flying = not flying end
    end))
    table.insert(kbConns, UserInput.InputEnded:Connect(function(inp)
        if inp.KeyCode==Enum.KeyCode.W then key.W=false end
        if inp.KeyCode==Enum.KeyCode.A then key.A=false end
        if inp.KeyCode==Enum.KeyCode.S then key.S=false end
        if inp.KeyCode==Enum.KeyCode.D then key.D=false end
    end))
end

-- Mobile move vector via PlayerModule (fallback to Humanoid.MoveDirection)
local function getMobileMove2()
    local ps = player:FindFirstChild("PlayerScripts")
    local pm = ps and ps:FindFirstChild("PlayerModule")
    if pm then
        local ok, controls = pcall(function() return require(pm):GetControls() end)
        if ok and controls and controls.GetMoveVector then
            local v = controls:GetMoveVector()
            return Vector2.new(v.X, v.Z) -- x=strafe, y=forward(+)
        end
    end
    local hum = humanoid()
    if hum then
        local dir = hum.MoveDirection
        -- Project onto camera axes
        local forward = dir:Dot(camera.CFrame.LookVector)
        local strafe = dir:Dot(camera.CFrame.RightVector)
        return Vector2.new(strafe, forward)
    end
    return Vector2.zero
end

local function startFlight()
    cleanupFlight()

    local hum = humanoid()
    local root = rootPart()
    if not (hum and root) then return end

    hum.AutoRotate = false

    -- Attachment + AlignOrientation to face camera yaw/pitch (no roll)
    rootAtt = Instance.new("Attachment")
    rootAtt.Name = "PandaFly_Att"
    rootAtt.Parent = root

    align = Instance.new("AlignOrientation")
    align.Mode = Enum.OrientationAlignmentMode.OneAttachment
    align.Attachment0 = rootAtt
    align.Responsiveness = 60
    align.RigidityEnabled = false
    align.Parent = root

    -- Anti-gravity force to neutralize gravity so velocity control is crisp
    antiGrav = Instance.new("VectorForce")
    antiGrav.Force = Vector3.new(0, root.AssemblyMass * workspace.Gravity, 0)
    antiGrav.Attachment0 = rootAtt
    antiGrav.RelativeTo = Enum.ActuatorRelativeTo.World
    antiGrav.Parent = root

    -- Kill animations while flying
    orientConn = RunService.RenderStepped:Connect(function()
        if not flying then return end
        local camC = camera.CFrame
        -- build rotation without roll
        local look = camC.LookVector
        local up = Vector3.new(0,1,0)
        local right = look:Cross(up).Unit
        local flatUp = right:Cross(look).Unit
        local rot = CFrame.fromMatrix(Vector3.zero, right, flatUp, look)
        align.CFrame = rot
        stopAnimations(hum)
    end)

    -- Main motion loop
    flightConn = RunService.RenderStepped:Connect(function(dt)
        if not flying then return end
        if not root.Parent then cleanupFlight(); return end

        local torsoCF = root.CFrame
        local f = torsoCF.LookVector -- includes pitch for up/down
        local r = torsoCF.RightVector
        local move = Vector3.zero

        if mode == "pc" then
            local forward = (key.W and 1 or 0) + (key.S and -1 or 0)
            local strafe  = (key.D and 1 or 0) + (key.A and -1 or 0)
            -- Forward/back uses full torso look (with vertical component)
            move = move + f * forward
            -- Strafe is horizontal left/right of torso (remove vertical)
            local rFlat = Vector3.new(r.X, 0, r.Z).Magnitude > 0 and Vector3.new(r.X,0,r.Z).Unit or r
            move = move + rFlat * strafe
        else
            -- Mobile: joystick; disable backward (no behind)
            local mv2 = getMobileMove2()
            local forward = math.max(0, mv2.Y) -- no backward
            local strafe  = mv2.X
            -- Camera pan controls direction; forward uses full camera look (with pitch)
            local cf = camera.CFrame
            local camF = cf.LookVector
            local camR = cf.RightVector
            local camRFlat = Vector3.new(camR.X,0,camR.Z).Magnitude>0 and Vector3.new(camR.X,0,camR.Z).Unit or camR
            move = camF * forward + camRFlat * strafe
        end

        if move.Magnitude > 0 then
            move = move.Unit * speed
        end

        -- Apply desired velocity directly; anti-gravity holds altitude when not moving
        root.AssemblyLinearVelocity = Vector3.new(move.X, move.Y, move.Z)
    end)

    -- Auto-off on death
    local humConn
    humConn = hum.Died:Connect(function()
        flying = false
        cleanupFlight()
        if humConn then humConn:Disconnect() end
    end)
    deathConn = humConn
end

-- UI: minimized panda icon
local function spawnMini(onRestore)
    local mini = Instance.new("Frame")
    mini.Name = "MiniPanda"
    mini.Size = UDim2.fromOffset(56,56)
    mini.Position = UDim2.new(0.5,-28, 0.4,-28)
    mini.BackgroundColor3 = C_TOPBAR
    mini.Active = true
    corner(mini, 12); stroke(mini, 1)
    mini.Parent = gui

    local img = Instance.new("ImageLabel")
    img.BackgroundTransparency = 1
    img.Image = PANDA
    img.Size = UDim2.fromScale(1,1)
    img.Parent = mini

    makeDraggable(mini, mini)

    local moved = 0
    mini.InputBegan:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
            moved = 0
        end
    end)
    mini.InputChanged:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseMovement or input.UserInputType==Enum.UserInputType.Touch then
            moved += 1
        end
    end)
    mini.InputEnded:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 or input.UserInputType==Enum.UserInputType.Touch then
            if moved < 3 then
                mini:Destroy()
                onRestore()
            end
        end
    end)
end

-- UI building blocks
local function buildTopBar(parentFrame, withLeftPanda)
    local bar = Instance.new("Frame")
    bar.Name = "TopBar"
    bar.Size = UDim2.new(1, 0, 0, 36)
    bar.BackgroundColor3 = C_TOPBAR
    bar.Parent = parentFrame
    corner(bar, 10); stroke(bar, 1)

    local dragHandle = Instance.new("TextLabel")
    dragHandle.BackgroundTransparency = 1
    dragHandle.Text = ""
    dragHandle.Size = UDim2.new(1, -100, 1, 0)
    dragHandle.Position = UDim2.new(0, withLeftPanda and 36 or 0, 0, 0)
    dragHandle.Parent = bar

    if withLeftPanda then
        local panda = Instance.new("ImageLabel")
        panda.Name = "Panda"
        panda.BackgroundTransparency = 1
        panda.Image = PANDA
        panda.Size = UDim2.fromOffset(28,28)
        panda.Position = UDim2.new(0,4, 0,4)
        panda.Parent = bar
    end

    local close = Instance.new("TextButton")
    close.Name = "Close"
    close.Size = UDim2.fromOffset(32,24)
    close.Position = UDim2.new(1, -36, 0, 6)
    close.Text = "X"
    styleButton(close); close.Parent = bar

    local min = Instance.new("TextButton")
    min.Name = "Min"
    min.Size = UDim2.fromOffset(32,24)
    min.Position = UDim2.new(1, -72, 0, 6)
    min.Text = "-"
    styleButton(min); min.Parent = bar

    makeDraggable(parentFrame, dragHandle)

    return bar, min, close
end

local function themedBody(parentFrame)
    local body = Instance.new("Frame")
    body.Name = "Body"
    body.Size = UDim2.new(1, 0, 1, -36)
    body.Position = UDim2.new(0,0, 0,36)
    body.BackgroundColor3 = GRAD_A
    body.Parent = parentFrame
    corner(body, 12); stroke(body, 1); gradient(body, GRAD_A, GRAD_B, 90)
    return body
end

local function makeWindow(size, pos)
    local frame = Instance.new("Frame")
    frame.Name = "Window"
    frame.Size = size
    frame.Position = pos
    frame.BackgroundTransparency = 1
    frame.Active = true
    frame.Parent = gui
    return frame
end

-- Device select UI
local function deviceSelectUI()
    local win = makeWindow(UDim2.fromOffset(360, 240), UDim2.new(0.5, -180, 0.5, -120))
    local top, minBtn, closeBtn = buildTopBar(win, false)
    local body = themedBody(win)

    -- Panda centered at top-middle (in body)
    local panda = Instance.new("ImageLabel")
    panda.BackgroundTransparency = 1
    panda.Image = PANDA
    panda.Size = UDim2.fromOffset(64,64)
    panda.Position = UDim2.new(0.5, -32, 0, 8)
    panda.Parent = body

    local choose = Instance.new("TextLabel")
    choose.BackgroundTransparency = 1
    choose.Text = "Choose your device"
    choose.TextScaled = true
    choose.Size = UDim2.new(1, -20, 0, 28)
    choose.Position = UDim2.new(0, 10, 0, 80)
    fontify(choose); choose.Parent = body

    local pcLbl = Instance.new("TextLabel")
    pcLbl.BackgroundTransparency = 1
    pcLbl.Text = "PC/Emulator"
    pcLbl.TextScaled = true
    pcLbl.Size = UDim2.fromOffset(140, 22)
    pcLbl.Position = UDim2.new(0, 30, 0, 112)
    fontify(pcLbl); pcLbl.Parent = body

    local phLbl = pcLbl:Clone()
    phLbl.Text = "Phone"
    phLbl.Position = UDim2.new(1, -170, 0, 112)
    phLbl.Parent = body

    local pcBtn = Instance.new("ImageButton")
    pcBtn.BackgroundTransparency = 1
    pcBtn.Image = PCIMG
    pcBtn.Size = UDim2.fromOffset(96,96)
    pcBtn.Position = UDim2.new(0, 52, 0, 138)
    pcBtn.Parent = body

    local phBtn = pcBtn:Clone()
    phBtn.Image = PHIMG
    phBtn.Position = UDim2.new(1, -148, 0, 138)
    phBtn.Parent = body

    -- Wire top buttons
    minBtn.MouseButton1Click:Connect(function()
        win.Visible = false
        spawnMini(function() win.Visible = true end)
    end)
    closeBtn.MouseButton1Click:Connect(function()
        cleanupFlight()
        gui:Destroy()
        pcall(function() script:Destroy() end)
    end)

    -- Device routes
    pcBtn.MouseButton1Click:Connect(function()
        win:Destroy()
        mode = "pc"
        bindPCKeys()
        flyUI_PC()
    end)
    phBtn.MouseButton1Click:Connect(function()
        win:Destroy()
        mode = "phone"
        flyUI_Phone()
    end)
end

-- Shared fly UI pieces
local function commonFlyBody(win, topCenterIconImage, showEText)
    local top, minBtn, closeBtn = buildTopBar(win, true)
    local body = themedBody(win)

    -- Device icon at top middle
    local icon = Instance.new("ImageLabel")
    icon.BackgroundTransparency = 1
    icon.Image = topCenterIconImage
    icon.Size = UDim2.fromOffset(48,48)
    icon.Position = UDim2.new(0.5, -24, 0, 6)
    icon.Parent = top

    -- Controls
    local speedLabel = Instance.new("TextLabel")
    speedLabel.BackgroundTransparency = 1
    speedLabel.Text = "Speed"
    speedLabel.TextScaled = true
    speedLabel.Size = UDim2.new(0, 90, 0, 28)
    speedLabel.Position = UDim2.new(0, 12, 0, 8)
    fontify(speedLabel); speedLabel.Parent = body

    local speedBox = Instance.new("TextBox")
    speedBox.Text = tostring(speed)
    speedBox.ClearTextOnFocus = false
    speedBox.Size = UDim2.new(0, 90, 0, 36)
    speedBox.Position = UDim2.new(0, 12, 0, 40)
    speedBox.TextScaled = true
    styleButton(speedBox); speedBox.Parent = body

    local toggle = Instance.new("TextButton")
    toggle.Text = flying and "Fly: ON" or "Fly: OFF"
    toggle.Size = UDim2.new(0, 120, 0, 36)
    toggle.Position = UDim2.new(0, 120, 0, 40)
    styleButton(toggle); toggle.Parent = body

    local eHint
    if showEText then
        eHint = Instance.new("TextLabel")
        eHint.BackgroundTransparency = 1
        eHint.Text = "Press E to toggle fly on and off"
        eHint.TextScaled = true
        eHint.Size = UDim2.new(1, -12, 0, 24)
        eHint.Position = UDim2.new(0, 8, 0, 84)
        fontify(eHint); eHint.Parent = body
    end

    -- Wire buttons
    minBtn.MouseButton1Click:Connect(function()
        win.Visible = false
        spawnMini(function() win.Visible = true end)
    end)
    closeBtn.MouseButton1Click:Connect(function()
        cleanupFlight()
        gui:Destroy()
        pcall(function() script:Destroy() end)
    end)

    speedBox.FocusLost:Connect(function(enter)
        local n = tonumber(speedBox.Text)
        if n and n > 0 then
            speed = n
        else
            speedBox.Text = tostring(speed)
        end
    end)

    toggle.MouseButton1Click:Connect(function()
        flying = not flying
        toggle.Text = flying and "Fly: ON" or "Fly: OFF"
        if flying and not align then
            startFlight()
        elseif not flying then
            -- keep attachments for quick resume; motion loop checks flag
        end
    end)

    return body, toggle
end

-- PC Fly UI
function flyUI_PC()
    local win = makeWindow(UDim2.fromOffset(380, 180), UDim2.new(0.5, -190, 0.5, -90))
    local body, toggle = commonFlyBody(win, PCIMG, true)

    -- Start flight rig so E/toggle works immediately
    startFlight()
end

-- Phone Fly UI
function flyUI_Phone()
    local win = makeWindow(UDim2.fromOffset(380, 180), UDim2.new(0.5, -190, 0.5, -90))
    local body, toggle = commonFlyBody(win, PHIMG, false)

    -- Start flight rig so toggle works immediately
    startFlight()
end

-- Rebuild rig on respawn (flight off by default)
player.CharacterAdded:Connect(function()
    cleanupFlight()
end)

-- Boot: device select
deviceSelectUI()

-- PandaFly v2 â€” unified draggable panels, compact scaling, torso-based flight (PC/Mobile),
-- animations off while flying, E toggle (PC), mobile blocks backward, minimized icon draggable.
-- Paste into an executor or StarterPlayerScripts for testing.

-- Services
local Players    = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInput  = game:GetService("UserInputService")
local Content    = game:GetService("ContentProvider")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- UI root (idempotent)
local parentGui = player:FindFirstChild("PlayerGui") or game:GetService("CoreGui")
if parentGui:FindFirstChild("PandaFlyGUI") then
    parentGui.PandaFlyGUI:Destroy()
end

local gui = Instance.new("ScreenGui")
gui.Name = "PandaFlyGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.DisplayOrder = 1e7
gui.Parent = parentGui

-- Assets
local PANDA = "rbxassetid://140281572489473"
local PCIMG = "rbxassetid://75277585107743"
local PHIMG = "rbxassetid://75163729493008"
pcall(function() Content:PreloadAsync({PANDA, PCIMG, PHIMG}) end)

-- Theme colors
local C_TOPBAR = Color3.fromRGB(40,120,30)
local C_BODY_A = Color3.fromRGB(0,255,0)
local C_BODY_B = Color3.fromRGB(255,255,0)
local C_BTN    = Color3.fromRGB(0,140,0)
local C_TEXT   = Color3.new(1,1,1)
local C_BLACK  = Color3.new(0,0,0)

-- Helpers
local function corner(inst,r)
    local c = Instance.new("UICorner", inst)
    c.CornerRadius = UDim.new(0, r or 8)
end

local function stroke(inst,t)
    local s = Instance.new("UIStroke", inst)
    s.Color = C_BLACK
    s.Thickness = t or 1
end

local function gradient(inst)
    local g = Instance.new("UIGradient", inst)
    g.Color = ColorSequence.new(C_BODY_A, C_BODY_B)
    g.Rotation = 90
end

local function styleBtn(btn)
    btn.BackgroundColor3 = C_BTN
    btn.AutoButtonColor = true
    btn.Font = Enum.Font.Bangers
    btn.TextColor3 = C_TEXT
    btn.TextStrokeColor3 = C_BLACK
    btn.TextStrokeTransparency = 0
    btn.TextScaled = true
    corner(btn,8)
    stroke(btn,1)
end

local function labelFont(lbl)
    lbl.Font = Enum.Font.Bangers
    lbl.TextColor3 = C_TEXT
    lbl.TextStrokeColor3 = C_BLACK
    lbl.TextStrokeTransparency = 0
end

-- Drag logic (mouse & touch)
local function makeDraggable(frame, handle)
    local dragging, startPos, dragStart = false
    handle.InputBegan:Connect(function(inp)
        if inp.UserInputType==Enum.UserInputType.MouseButton1 or
           inp.UserInputType==Enum.UserInputType.Touch then
            dragging = true
            dragStart = inp.Position
            startPos  = frame.Position
            inp.Changed:Connect(function()
                if inp.UserInputState==Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    handle.InputChanged:Connect(function(inp)
        if not dragging then return end
        if inp.UserInputType==Enum.UserInputType.MouseMovement or
           inp.UserInputType==Enum.UserInputType.Touch then
            local delta = inp.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
end

-- Minimized icon
local function spawnMini(onRestore)
    local mini = Instance.new("Frame", gui)
    mini.Name = "MiniPanda"
    mini.Size = UDim2.fromOffset(48,48)
    mini.Position = UDim2.new(0.5, -24, 0.5, -24)
    mini.BackgroundColor3 = C_TOPBAR
    corner(mini,12); stroke(mini,1)

    local img = Instance.new("ImageLabel", mini)
    img.Size = UDim2.fromScale(1,1)
    img.BackgroundTransparency = 1
    img.Image = PANDA

    -- click vs drag threshold
    local dragging, moved = false, 0
    mini.InputBegan:Connect(function(inp)
        if inp.UserInputType==Enum.UserInputType.MouseButton1 or
           inp.UserInputType==Enum.UserInputType.Touch then
            dragging, moved = true, 0
        end
    end)
    mini.InputChanged:Connect(function(inp)
        if dragging and (inp.UserInputType==Enum.UserInputType.MouseMovement or
                         inp.UserInputType==Enum.UserInputType.Touch) then
            moved = moved + 1
        end
    end)
    mini.InputEnded:Connect(function(inp)
        if inp.UserInputType==Enum.UserInputType.MouseButton1 or
           inp.UserInputType==Enum.UserInputType.Touch then
            dragging = false
            if moved < 3 then
                mini:Destroy()
                onRestore()
            end
        end
    end)

    makeDraggable(mini, mini)
    return mini
end

-- Flight state & cleanup
local flying, mode, speed = false, "none", 16
local flyConn, animConn, deathConn, kbConns = nil, nil, nil, {}
local align, linVel, antiGrav, att = nil,nil,nil,nil

local function stopAnims(hum)
    for _,t in ipairs(hum:GetPlayingAnimationTracks()) do
        t:Stop(0.1)
    end
end

local function cleanFlight()
    if flyConn  then flyConn:Disconnect() end
    if animConn then animConn:Disconnect() end
    if deathConn then deathConn:Disconnect() end
    for _,c in ipairs(kbConns) do c:Disconnect() end
    kbConns = {}
    if align then align:Destroy() end
    if linVel then linVel:Destroy() end
    if antiGrav then antiGrav:Destroy() end
    if att then att:Destroy() end
    local char = player.Character
    if char then
        local hum = char:FindFirstChildOfClass("Humanoid")
        if hum then hum.AutoRotate = true end
    end
    flying = false
end

-- Mobile move vector (blocks backwards)
local function getmoveMobile()
    local ps = player:FindFirstChild("PlayerScripts")
    local controls
    if ps and ps:FindFirstChild("PlayerModule") then
        local ok, mod = pcall(require, ps.PlayerModule)
        if ok then controls = mod:GetControls() end
    end
    if controls and controls.GetMoveVector then
        local v = controls:GetMoveVector()
        return Vector2.new(v.X, math.clamp(-v.Z, 0, 1))
    end
    -- fallback
    local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
    if hum then
        local d = hum.MoveDirection
        local f = d:Dot(camera.CFrame.LookVector)
        local s = d:Dot(camera.CFrame.RightVector)
        return Vector2.new(s,math.clamp(f,0,1))
    end
    return Vector2.zero
end

-- PC WASD & E toggle
local keys = {W=false,A=false,S=false,D=false}
local function bindPC()
    table.foreach(kbConns, function(i,c) c:Disconnect() end)
    kbConns = {}
    table.insert(kbConns, UserInput.InputBegan:Connect(function(i,gp)
        if gp or UserInput:GetFocusedTextBox() then return end
        if i.KeyCode==Enum.KeyCode.W then keys.W=true end
        if i.KeyCode==Enum.KeyCode.A then keys.A=true end
        if i.KeyCode==Enum.KeyCode.S then keys.S=true end
        if i.KeyCode==Enum.KeyCode.D then keys.D=true end
        if i.KeyCode==Enum.KeyCode.E and mode=="pc" then
            flying = not flying
        end
    end))
    table.insert(kbConns, UserInput.InputEnded:Connect(function(i)
        if i.KeyCode==Enum.KeyCode.W then keys.W=false end
        if i.KeyCode==Enum.KeyCode.A then keys.A=false end
        if i.KeyCode==Enum.KeyCode.S then keys.S=false end
        if i.KeyCode==Enum.KeyCode.D then keys.D=false end
    end))
end

-- Core flight updater
local function startFlight()
    cleanFlight()
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:WaitForChild("HumanoidRootPart")
    local hum  = char:FindFirstChildOfClass("Humanoid")
    hum.AutoRotate = false

    antigrav = Instance.new("BodyForce", root)
    antigrav.Force = Vector3.new(0, workspace.Gravity * root:GetMass(), 0)

    att = Instance.new("Attachment", root)
    linVel = Instance.new("LinearVelocity", root)
    linVel.Attachment0 = att
    linVel.MaxForce = math.huge
    linVel.RelativeTo = Enum.ActuatorRelativeTo.Attachment0

    if mode=="pc" then
        bindPC()
        flyConn = RunService.Heartbeat:Connect(function()
            if not flying then
                linVel.VectorVelocity = Vector3.zero
                return
            end
            -- build camera-based direction
            local dir = Vector3.zero
            if keys.W then dir += camera.CFrame.LookVector end
            if keys.S then dir -= camera.CFrame.LookVector end
            if keys.A then dir -= camera.CFrame.RightVector end
            if keys.D then dir += camera.CFrame.RightVector end
            dir = dir.Unit * speed
            linVel.VectorVelocity = dir
            stopAnims(hum)
        end)
    else
        flyConn = RunService.Heartbeat:Connect(function()
            if not flying then
                linVel.VectorVelocity = Vector3.zero
                return
            end
            local mv = getmoveMobile()
            local forward = camera.CFrame.LookVector * mv.Y
            local sideways = camera.CFrame.RightVector * mv.X
            local dir = (forward + sideways).Unit * speed
            linVel.VectorVelocity = dir
            stopAnims(hum)
        end)
    end

    deathConn = player.Character.Humanoid.Died:Connect(cleanFlight)
end

-- Build panels
local function makePanel(title, parent, layoutFunc)
    local fr = Instance.new("Frame", gui)
    fr.Size = UDim2.new(0, 250, 0, 160)
    fr.Position = UDim2.new(0.5, -125, 0.5, -80)
    gradient(fr)
    fr.Active = true
    corner(fr, 12)
    fr.Name = title

    -- topbar
    local top = Instance.new("Frame", fr)
    top.Size = UDim2.new(1,0,0,32)
    top.BackgroundColor3 = C_TOPBAR
    corner(top,12)
    stroke(top,1)

    local titleLbl = Instance.new("TextLabel", top)
    titleLbl.Size = UDim2.new(1,-64,1,0)
    titleLbl.Position = UDim2.new(0,32,0,0)
    titleLbl.BackgroundTransparency = 1
    titleLbl.Text = title
    titleLbl.TextColor3 = C_TEXT
    titleLbl.Font = Enum.Font.Bangers
    titleLbl.TextSize = 18
    titleLbl.TextStrokeColor3 = C_BLACK
    titleLbl.TextStrokeTransparency = 0

    -- Panda icon top-left
    local pandaIcon = Instance.new("ImageLabel", top)
    pandaIcon.Size = UDim2.new(0,28,0,28)
    pandaIcon.Position = UDim2.new(0,4,0,2)
    pandaIcon.BackgroundTransparency = 1
    pandaIcon.Image = PANDA

    -- minimize button
    local btnMin = Instance.new("TextButton", top)
    btnMin.Size = UDim2.new(0,24,0,24)
    btnMin.Position = UDim2.new(1,-56,0,4)
    btnMin.Text = "-"
    styleBtn(btnMin)

    -- close button
    local btnClose = Instance.new("TextButton", top)
    btnClose.Size = UDim2.new(0,24,0,24)
    btnClose.Position = UDim2.new(1,-28,0,4)
    btnClose.Text = "X"
    styleBtn(btnClose)

    -- drag handle = top
    makeDraggable(fr, top)

    -- collapse logic
    btnMin.MouseButton1Click:Connect(function()
        fr:Destroy()
        spawnMini(function() layoutFunc() end)
    end)
    btnClose.MouseButton1Click:Connect(function()
        gui:Destroy()
        cleanFlight()
    end)

    return fr
end

-- Device select UI
local function showDeviceUI()
    local panel = makePanel("Choose Device", gui, showDeviceUI)

    -- Panda at top center
    local img = Instance.new("ImageLabel", panel)
    img.Size = UDim2.new(0,64,0,64)
    img.Position = UDim2.new(0.5,-32,0,40)
    img.BackgroundTransparency = 1
    img.Image = PANDA

    -- label
    local lbl = Instance.new("TextLabel", panel)
    lbl.Size = UDim2.new(1,0,0,24)
    lbl.Position = UDim2.new(0,0,0,112)
    lbl.BackgroundTransparency = 1
    lbl.Text = "Choose your device"
    lbl.TextSize = 16
    labelFont(lbl)

    -- PC side
    local pcBtn = Instance.new("ImageButton", panel)
    pcBtn.Size = UDim2.new(0,48,0,48)
    pcBtn.Position = UDim2.new(0.3,-24,0,56)
    pcBtn.BackgroundTransparency = 1
    pcBtn.Image = PCIMG
    local pcLbl = Instance.new("TextLabel", panel)
    pcLbl.Size = UDim2.new(0,60,0,16)
    pcLbl.Position = UDim2.new(0.3,-30,0,48)
    pcLbl.BackgroundTransparency = 1
    pcLbl.Text = "PC/Emulator"
    pcLbl.TextSize = 14
    labelFont(pcLbl)

    -- Phone side
    local phBtn = Instance.new("ImageButton", panel)
    phBtn.Size = UDim2.new(0,48,0,48)
    phBtn.Position = UDim2.new(0.7,-24,0,56)
    phBtn.BackgroundTransparency = 1
    phBtn.Image = PHIMG
    local phLbl = Instance.new("TextLabel", panel)
    phLbl.Size = UDim2.new(0,60,0,16)
    phLbl.Position = UDim2.new(0.7,-30,0,48)
    phLbl.BackgroundTransparency = 1
    phLbl.Text = "Phone"
    phLbl.TextSize = 14
    labelFont(phLbl)

    -- click handlers
    pcBtn.MouseButton1Click:Connect(function()
        panel:Destroy()
        mode = "pc"
        showFlyUI()
    end)
    phBtn.MouseButton1Click:Connect(function()
        panel:Destroy()
        mode = "phone"
        showFlyUI()
    end)
end

-- Fly UI
function showFlyUI()
    local panel = makePanel("Fly Controls", gui, showFlyUI)

    -- PC icon at top center for PC mode
    if mode=="pc" then
        local pcIcon = Instance.new("ImageLabel", panel)
        pcIcon.Size = UDim2.new(0,48,0,48)
        pcIcon.Position = UDim2.new(0.5,-24,0,40)
        pcIcon.Image = PCIMG
        pcIcon.BackgroundTransparency = 1
    end

    -- flyspeed input label
    local spLbl = Instance.new("TextLabel", panel)
    spLbl.Size = UDim2.new(0,100,0,20)
    spLbl.Position = UDim2.new(0,16,0,56)
    spLbl.BackgroundTransparency = 1
    spLbl.Text = "Fly Speed:"
    spLbl.TextSize = 14
    labelFont(spLbl)

    -- speed text box
    local spBox = Instance.new("TextBox", panel)
    spBox.Size = UDim2.new(0,60,0,24)
    spBox.Position = UDim2.new(0,120,0,52)
    spBox.Text = tostring(speed)
    spBox.TextSize = 16
    spBox.ClearTextOnFocus = false
    spBox.Font = Enum.Font.Bangers
    spBox.TextColor3 = C_TEXT
    spBox.TextStrokeColor3 = C_BLACK
    spBox.TextStrokeTransparency = 0
    corner(spBox,8); stroke(spBox,1)
    spBox.FocusLost:Connect(function(enter)
        local n = tonumber(spBox.Text)
        if n and n>0 then speed = n end
        spBox.Text = tostring(speed)
    end)

    -- on/off toggle
    local tog = Instance.new("TextButton", panel)
    tog.Size = UDim2.new(0,60,0,28)
    tog.Position = UDim2.new(1,-76,0,48)
    tog.Text = "OFF"
    styleBtn(tog)

    if mode=="pc" then
        local hint = Instance.new("TextLabel", panel)
        hint.Size = UDim2.new(1,0,0,16)
        hint.Position = UDim2.new(0,0,1,-16)
        hint.BackgroundTransparency = 1
        hint.Text = "Press E to toggle"
        hint.TextSize = 12
        hint.TextColor3 = C_TEXT
        hint.Font = Enum.Font.Bangers
        hint.TextStrokeColor3 = C_BLACK
        hint.TextStrokeTransparency = 0
    end

    tog.MouseButton1Click:Connect(function()
        flying = not flying
        tog.Text = flying and "ON" or "OFF"
        if flying then startFlight() else cleanFlight() end
    end)
end

-- kick it off
showDeviceUI()
